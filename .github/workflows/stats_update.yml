name: Update GitHub Stats

# Trigger on manual dispatch or twice daily (9 AM and 5 PM Nepal Time)
on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: "15 3,11 * * *"  # 9:00 AM and 5:00 PM Nepal Time (UTC+5:45)

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: 'pip'

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  generate-stats:
    name: Generate Statistics
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Restore Dependencies Cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate Stats Image
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          python scripts/stats_script.py
          # Ensure the image was created
          if [ ! -f "stats_image.png" ]; then
            echo "::error::Failed to generate stats image"
            exit 1
          fi
          # Create artifact to pass to next job
          mkdir -p ./artifact
          cp stats_image.png ./artifact/
        continue-on-error: false

      - name: Upload Stats Image
        uses: actions/upload-artifact@v3
        with:
          name: stats-image
          path: ./artifact/stats_image.png
          retention-days: 1

  update-repo:
    name: Update Repository
    needs: generate-stats
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Stats Image
        uses: actions/download-artifact@v3
        with:
          name: stats-image
          path: .

      - name: Commit and Push Updates
        run: |
          # Configure git
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add and commit changes
          git add stats_image.png

          # Get current date for commit message
          current_date=$(date +'%Y-%m-%d %H:%M:%S %Z')

          # Commit and push if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update stats image for ${current_date}"
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notification
    needs: [generate-stats, update-repo]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check Workflow Status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: |
          echo "::error::Workflow failed! Please check the logs for more details."
          exit 1

